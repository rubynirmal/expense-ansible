- name: Disable Nodejs default Version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable NodeJS 18 version
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: Install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Copy Backend Service File
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add Application User
  ansible.builtin.user:
    name: expense

- name: Delete old app directory
  ansible.builtin.file:
    path: /app
    state: absent

- name: Create App directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download and extract app content
  ansible.builtin.unarchive:
    src: https://expense-artifacts.s3.amazonaws.com/backend.zip
    dest: /app
    remote_src: yes

- name: Download NodeJS Dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app

- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Load schema
  ansible.builtin.shell: >
    mysql -h {{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_Host', region='us-east-1' ) }}
    -u{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_USER', region='us-east-1' ) }}
    -p{{ lookup('amazon.aws.aws_ssm', 'backend.{{env}}.DB_PASS', region='us-east-1' ) }}
    < /app/schema/backend.sql

- name: Restart Backend Service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes
