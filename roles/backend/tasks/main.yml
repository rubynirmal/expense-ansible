- name: Disable Nodejs default Version
  ansible.builtin.shell: dnf module disable nodejs -y
- name: Enable NodeJS 18 version
  ansible.builtin.shell: dnf module enable nodejs:18 -y
- name: install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state: present
- name: copy Backend Service File
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service
- name: Add Application User
  ansible.builtin.user:
    name: expense
- name: Delete old app directory
  ansible.builtin.file:
    path: /app
    state: absent
- name: Create App directory
  ansible.builtin.file:
    path: /app
    state: directory
- name: Download and extract app content
  ansible.builtin.unarchive:
    src: https://expense-artifacts.s3.amazonaws.com/backend.zip
    dest: /app
    remote_src: yes
- name: download NodeJS Dependencies
  ansible.builtin.shell: npm install
  args:
    chdir: /app
- name: install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: present
- name: load schema
  ansible.builtin.shell:  mysql -h mysql-dev.rubydevops.cloud -u root -p{{MYSQL_ROOT_PASSWORD}} < /app/schema/backend.sql


- name: Restart Backend Service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes
